//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java//uk/co/amlcurran/social/EventsService.java
//

#include "J2ObjC_header.h"

#pragma push_macro("EventsService_INCLUDE_ALL")
#ifdef EventsService_RESTRICT
#define EventsService_INCLUDE_ALL 0
#else
#define EventsService_INCLUDE_ALL 1
#endif
#undef EventsService_RESTRICT

#if !defined (SCEventsService_) && (EventsService_INCLUDE_ALL || defined(SCEventsService_INCLUDE))
#define SCEventsService_

@class SCCalendarSource;
@class SCTimestamp;
@protocol SCEventsRepository;
@protocol SCTimeRepository;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface SCEventsService : NSObject

#pragma mark Public

- (instancetype)initWithSCTimeRepository:(id<SCTimeRepository>)dateCreator
                  withSCEventsRepository:(id<SCEventsRepository>)eventsRepository;

- (SCCalendarSource * __nonnull)getCalendarSourceWithInt:(jint)numberOfDays
                                         withSCTimestamp:(SCTimestamp *)now;

@end

J2OBJC_EMPTY_STATIC_INIT(SCEventsService)

FOUNDATION_EXPORT void SCEventsService_initWithSCTimeRepository_withSCEventsRepository_(SCEventsService *self, id<SCTimeRepository> dateCreator, id<SCEventsRepository> eventsRepository);

FOUNDATION_EXPORT SCEventsService *new_SCEventsService_initWithSCTimeRepository_withSCEventsRepository_(id<SCTimeRepository> dateCreator, id<SCEventsRepository> eventsRepository) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SCEventsService *create_SCEventsService_initWithSCTimeRepository_withSCEventsRepository_(id<SCTimeRepository> dateCreator, id<SCEventsRepository> eventsRepository);

J2OBJC_TYPE_LITERAL_HEADER(SCEventsService)

@compatibility_alias UkCoAmlcurranSocialEventsService SCEventsService;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif

#pragma pop_macro("EventsService_INCLUDE_ALL")
