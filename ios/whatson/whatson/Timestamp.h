//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java//uk/co/amlcurran/social/Timestamp.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Timestamp")
#ifdef RESTRICT_Timestamp
#define INCLUDE_ALL_Timestamp 0
#else
#define INCLUDE_ALL_Timestamp 1
#endif
#undef RESTRICT_Timestamp

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (SCTimestamp_) && (INCLUDE_ALL_Timestamp || defined(INCLUDE_SCTimestamp))
#define SCTimestamp_

@class SCTimeOfDay;
@protocol SCTimeCalculator;

@interface SCTimestamp : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithLong:(jlong)millis
                  withSCTimeCalculator:(id<SCTimeCalculator>)timeCalculator;

- (jint)daysSinceEpoch;

- (jlong)getMillis;

- (SCTimestamp * __nonnull)plusDaysWithInt:(jint)days;

- (SCTimestamp * __nonnull)plusHoursWithInt:(jint)hours;

- (SCTimestamp * __nonnull)plusHoursOfWithSCTimeOfDay:(SCTimeOfDay *)timeOfDay;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(SCTimestamp)

FOUNDATION_EXPORT void SCTimestamp_initWithLong_withSCTimeCalculator_(SCTimestamp *self, jlong millis, id<SCTimeCalculator> timeCalculator);

FOUNDATION_EXPORT SCTimestamp *new_SCTimestamp_initWithLong_withSCTimeCalculator_(jlong millis, id<SCTimeCalculator> timeCalculator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT SCTimestamp *create_SCTimestamp_initWithLong_withSCTimeCalculator_(jlong millis, id<SCTimeCalculator> timeCalculator);

J2OBJC_TYPE_LITERAL_HEADER(SCTimestamp)

@compatibility_alias UkCoAmlcurranSocialTimestamp SCTimestamp;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_Timestamp")
