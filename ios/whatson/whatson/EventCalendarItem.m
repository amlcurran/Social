//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java//uk/co/amlcurran/social/EventCalendarItem.java
//

#include "EventCalendarItem.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Timestamp.h"
#include "java/lang/annotation/Annotation.h"
#include "javax/annotation/Nonnull.h"
#include "javax/annotation/meta/When.h"

@interface SCEventCalendarItem () {
 @public
  NSString *eventId_;
  NSString *title_;
  SCTimestamp *start_;
  SCTimestamp *endTime_;
}

@end

J2OBJC_FIELD_SETTER(SCEventCalendarItem, eventId_, NSString *)
J2OBJC_FIELD_SETTER(SCEventCalendarItem, title_, NSString *)
J2OBJC_FIELD_SETTER(SCEventCalendarItem, start_, SCTimestamp *)
J2OBJC_FIELD_SETTER(SCEventCalendarItem, endTime_, SCTimestamp *)

__attribute__((unused)) static IOSObjectArray *SCEventCalendarItem__Annotations$0();

__attribute__((unused)) static IOSObjectArray *SCEventCalendarItem__Annotations$1();

__attribute__((unused)) static IOSObjectArray *SCEventCalendarItem__Annotations$2();

@implementation SCEventCalendarItem

- (instancetype)initWithNSString:(NSString *)eventId
                    withNSString:(NSString *)title
                 withSCTimestamp:(SCTimestamp *)time
                 withSCTimestamp:(SCTimestamp *)endTime {
  SCEventCalendarItem_initWithNSString_withNSString_withSCTimestamp_withSCTimestamp_(self, eventId, title, time, endTime);
  return self;
}

- (NSString *)id__ {
  return eventId_;
}

- (NSString * __nonnull)title {
  return title_;
}

- (SCTimestamp * __nonnull)startTime {
  return start_;
}

- (SCTimestamp * __nonnull)endTime {
  return endTime_;
}

- (jboolean)isEmpty {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "LSCTimestamp;", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "LSCTimestamp;", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withSCTimestamp:withSCTimestamp:);
  methods[1].selector = @selector(id__);
  methods[2].selector = @selector(title);
  methods[3].selector = @selector(startTime);
  methods[4].selector = @selector(endTime);
  methods[5].selector = @selector(isEmpty);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "eventId_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "title_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "start_", "LSCTimestamp;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "endTime_", "LSCTimestamp;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LSCTimestamp;LSCTimestamp;", "id", (void *)&SCEventCalendarItem__Annotations$0, (void *)&SCEventCalendarItem__Annotations$1, (void *)&SCEventCalendarItem__Annotations$2 };
  static const J2ObjcClassInfo _SCEventCalendarItem = { "EventCalendarItem", "uk.co.amlcurran.social", ptrTable, methods, fields, 7, 0x0, 6, 4, -1, -1, -1, -1, -1 };
  return &_SCEventCalendarItem;
}

@end

void SCEventCalendarItem_initWithNSString_withNSString_withSCTimestamp_withSCTimestamp_(SCEventCalendarItem *self, NSString *eventId, NSString *title, SCTimestamp *time, SCTimestamp *endTime) {
  NSObject_init(self);
  self->eventId_ = eventId;
  self->title_ = title;
  self->start_ = time;
  self->endTime_ = endTime;
}

SCEventCalendarItem *new_SCEventCalendarItem_initWithNSString_withNSString_withSCTimestamp_withSCTimestamp_(NSString *eventId, NSString *title, SCTimestamp *time, SCTimestamp *endTime) {
  J2OBJC_NEW_IMPL(SCEventCalendarItem, initWithNSString_withNSString_withSCTimestamp_withSCTimestamp_, eventId, title, time, endTime)
}

SCEventCalendarItem *create_SCEventCalendarItem_initWithNSString_withNSString_withSCTimestamp_withSCTimestamp_(NSString *eventId, NSString *title, SCTimestamp *time, SCTimestamp *endTime) {
  J2OBJC_CREATE_IMPL(SCEventCalendarItem, initWithNSString_withNSString_withSCTimestamp_withSCTimestamp_, eventId, title, time, endTime)
}

IOSObjectArray *SCEventCalendarItem__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *SCEventCalendarItem__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *SCEventCalendarItem__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SCEventCalendarItem)
