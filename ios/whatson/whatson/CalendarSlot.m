//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java//uk/co/amlcurran/social/CalendarSlot.java
//

#include "CalendarItem.h"
#include "CalendarSlot.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "javax/annotation/Nonnull.h"
#include "javax/annotation/Nullable.h"
#include "javax/annotation/meta/When.h"

@interface SCCalendarSlot () {
 @public
  id<JavaUtilList> calendarItems_;
}

@end

J2OBJC_FIELD_SETTER(SCCalendarSlot, calendarItems_, id<JavaUtilList>)

__attribute__((unused)) static IOSObjectArray *SCCalendarSlot__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *SCCalendarSlot__Annotations$1(void);

@implementation SCCalendarSlot

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  SCCalendarSlot_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<SCCalendarItem>)firstItem {
  return [((id<JavaUtilList>) nil_chk(calendarItems_)) getWithInt:0];
}

- (void)addItemWithSCCalendarItem:(id<SCCalendarItem>)item {
  [((id<JavaUtilList>) nil_chk(self->calendarItems_)) addWithId:item];
}

- (jint)count {
  return [((id<JavaUtilList>) nil_chk(calendarItems_)) size];
}

- (jboolean)isEmpty {
  return [((id<JavaUtilList>) nil_chk(calendarItems_)) isEmpty];
}

- (id<JavaUtilList>)items {
  return calendarItems_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LSCCalendarItem;", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 3, 4, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(firstItem);
  methods[2].selector = @selector(addItemWithSCCalendarItem:);
  methods[3].selector = @selector(count);
  methods[4].selector = @selector(isEmpty);
  methods[5].selector = @selector(items);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "calendarItems_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { (void *)&SCCalendarSlot__Annotations$0, "addItem", "LSCCalendarItem;", "()Ljava/util/List<Luk/co/amlcurran/social/CalendarItem;>;", (void *)&SCCalendarSlot__Annotations$1, "Ljava/util/List<Luk/co/amlcurran/social/CalendarItem;>;" };
  static const J2ObjcClassInfo _SCCalendarSlot = { "CalendarSlot", "uk.co.amlcurran.social", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, -1 };
  return &_SCCalendarSlot;
}

@end

void SCCalendarSlot_init(SCCalendarSlot *self) {
  NSObject_init(self);
  self->calendarItems_ = new_JavaUtilArrayList_init();
}

SCCalendarSlot *new_SCCalendarSlot_init() {
  J2OBJC_NEW_IMPL(SCCalendarSlot, init)
}

SCCalendarSlot *create_SCCalendarSlot_init() {
  J2OBJC_CREATE_IMPL(SCCalendarSlot, init)
}

IOSObjectArray *SCCalendarSlot__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNullable() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *SCCalendarSlot__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SCCalendarSlot)

J2OBJC_NAME_MAPPING(SCCalendarSlot, "uk.co.amlcurran.social", "SC")
