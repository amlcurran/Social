//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java//uk/co/amlcurran/social/core/ContainerHelpers.java
//

#include "ContainerHelpers.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"

J2OBJC_INITIALIZED_DEFN(UkCoAmlcurranSocialCoreContainerHelpers)

IOSIntArray *UkCoAmlcurranSocialCoreContainerHelpers_EMPTY_INTS;
IOSLongArray *UkCoAmlcurranSocialCoreContainerHelpers_EMPTY_LONGS;
IOSObjectArray *UkCoAmlcurranSocialCoreContainerHelpers_EMPTY_OBJECTS;

@implementation UkCoAmlcurranSocialCoreContainerHelpers

+ (jint)idealIntArraySizeWithInt:(jint)need {
  return UkCoAmlcurranSocialCoreContainerHelpers_idealIntArraySizeWithInt_(need);
}

+ (jint)idealLongArraySizeWithInt:(jint)need {
  return UkCoAmlcurranSocialCoreContainerHelpers_idealLongArraySizeWithInt_(need);
}

+ (jint)idealByteArraySizeWithInt:(jint)need {
  return UkCoAmlcurranSocialCoreContainerHelpers_idealByteArraySizeWithInt_(need);
}

+ (jboolean)equalWithId:(id)a
                 withId:(id)b {
  return UkCoAmlcurranSocialCoreContainerHelpers_equalWithId_withId_(a, b);
}

+ (jint)binarySearchWithIntArray:(IOSIntArray *)array
                         withInt:(jint)size
                         withInt:(jint)value {
  return UkCoAmlcurranSocialCoreContainerHelpers_binarySearchWithIntArray_withInt_withInt_(array, size, value);
}

+ (jint)binarySearchWithLongArray:(IOSLongArray *)array
                          withInt:(jint)size
                         withLong:(jlong)value {
  return UkCoAmlcurranSocialCoreContainerHelpers_binarySearchWithLongArray_withInt_withLong_(array, size, value);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  UkCoAmlcurranSocialCoreContainerHelpers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [UkCoAmlcurranSocialCoreContainerHelpers class]) {
    UkCoAmlcurranSocialCoreContainerHelpers_EMPTY_INTS = [IOSIntArray newArrayWithLength:0];
    UkCoAmlcurranSocialCoreContainerHelpers_EMPTY_LONGS = [IOSLongArray newArrayWithLength:0];
    UkCoAmlcurranSocialCoreContainerHelpers_EMPTY_OBJECTS = [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()];
    J2OBJC_SET_INITIALIZED(UkCoAmlcurranSocialCoreContainerHelpers)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "idealIntArraySizeWithInt:", "idealIntArraySize", "I", 0x9, NULL, NULL },
    { "idealLongArraySizeWithInt:", "idealLongArraySize", "I", 0x9, NULL, NULL },
    { "idealByteArraySizeWithInt:", "idealByteArraySize", "I", 0x9, NULL, NULL },
    { "equalWithId:withId:", "equal", "Z", 0x9, NULL, NULL },
    { "binarySearchWithIntArray:withInt:withInt:", "binarySearch", "I", 0x8, NULL, NULL },
    { "binarySearchWithLongArray:withInt:withLong:", "binarySearch", "I", 0x8, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_INTS", "EMPTY_INTS", 0x18, "[I", &UkCoAmlcurranSocialCoreContainerHelpers_EMPTY_INTS, NULL, .constantValue.asLong = 0 },
    { "EMPTY_LONGS", "EMPTY_LONGS", 0x18, "[J", &UkCoAmlcurranSocialCoreContainerHelpers_EMPTY_LONGS, NULL, .constantValue.asLong = 0 },
    { "EMPTY_OBJECTS", "EMPTY_OBJECTS", 0x18, "[Ljava.lang.Object;", &UkCoAmlcurranSocialCoreContainerHelpers_EMPTY_OBJECTS, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _UkCoAmlcurranSocialCoreContainerHelpers = { 2, "ContainerHelpers", "uk.co.amlcurran.social.core", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_UkCoAmlcurranSocialCoreContainerHelpers;
}

@end

jint UkCoAmlcurranSocialCoreContainerHelpers_idealIntArraySizeWithInt_(jint need) {
  UkCoAmlcurranSocialCoreContainerHelpers_initialize();
  return UkCoAmlcurranSocialCoreContainerHelpers_idealByteArraySizeWithInt_(need * 4) / 4;
}

jint UkCoAmlcurranSocialCoreContainerHelpers_idealLongArraySizeWithInt_(jint need) {
  UkCoAmlcurranSocialCoreContainerHelpers_initialize();
  return UkCoAmlcurranSocialCoreContainerHelpers_idealByteArraySizeWithInt_(need * 8) / 8;
}

jint UkCoAmlcurranSocialCoreContainerHelpers_idealByteArraySizeWithInt_(jint need) {
  UkCoAmlcurranSocialCoreContainerHelpers_initialize();
  for (jint i = 4; i < 32; i++) if (need <= (JreLShift32(1, i)) - 12) return (JreLShift32(1, i)) - 12;
  return need;
}

jboolean UkCoAmlcurranSocialCoreContainerHelpers_equalWithId_withId_(id a, id b) {
  UkCoAmlcurranSocialCoreContainerHelpers_initialize();
  return a == b || (a != nil && [a isEqual:b]);
}

jint UkCoAmlcurranSocialCoreContainerHelpers_binarySearchWithIntArray_withInt_withInt_(IOSIntArray *array, jint size, jint value) {
  UkCoAmlcurranSocialCoreContainerHelpers_initialize();
  jint lo = 0;
  jint hi = size - 1;
  while (lo <= hi) {
    jint mid = JreURShift32((lo + hi), 1);
    jint midVal = IOSIntArray_Get(nil_chk(array), mid);
    if (midVal < value) {
      lo = mid + 1;
    }
    else if (midVal > value) {
      hi = mid - 1;
    }
    else {
      return mid;
    }
  }
  return ~lo;
}

jint UkCoAmlcurranSocialCoreContainerHelpers_binarySearchWithLongArray_withInt_withLong_(IOSLongArray *array, jint size, jlong value) {
  UkCoAmlcurranSocialCoreContainerHelpers_initialize();
  jint lo = 0;
  jint hi = size - 1;
  while (lo <= hi) {
    jint mid = JreURShift32((lo + hi), 1);
    jlong midVal = IOSLongArray_Get(nil_chk(array), mid);
    if (midVal < value) {
      lo = mid + 1;
    }
    else if (midVal > value) {
      hi = mid - 1;
    }
    else {
      return mid;
    }
  }
  return ~lo;
}

void UkCoAmlcurranSocialCoreContainerHelpers_init(UkCoAmlcurranSocialCoreContainerHelpers *self) {
  NSObject_init(self);
}

UkCoAmlcurranSocialCoreContainerHelpers *new_UkCoAmlcurranSocialCoreContainerHelpers_init() {
  UkCoAmlcurranSocialCoreContainerHelpers *self = [UkCoAmlcurranSocialCoreContainerHelpers alloc];
  UkCoAmlcurranSocialCoreContainerHelpers_init(self);
  return self;
}

UkCoAmlcurranSocialCoreContainerHelpers *create_UkCoAmlcurranSocialCoreContainerHelpers_init() {
  return new_UkCoAmlcurranSocialCoreContainerHelpers_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(UkCoAmlcurranSocialCoreContainerHelpers)
