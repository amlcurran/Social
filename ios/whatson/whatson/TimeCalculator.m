//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java//uk/co/amlcurran/social/TimeCalculator.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "TimeCalculator.h"
#include "Timestamp.h"
#include "javax/annotation/Nonnull.h"
#include "javax/annotation/meta/When.h"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface SCTimeCalculator : NSObject

@end

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

@implementation SCTimeCalculator

+ (IOSObjectArray *)__annotations_plusDaysWithInt_withSCTimestamp_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaxAnnotationNonnull alloc] initWithWhen:JavaxAnnotationMetaWhen_get_ALWAYS()] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_plusHoursWithSCTimestamp_withInt_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaxAnnotationNonnull alloc] initWithWhen:JavaxAnnotationMetaWhen_get_ALWAYS()] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "plusDaysWithInt:withSCTimestamp:", "plusDays", "Luk.co.amlcurran.social.Timestamp;", 0x401, NULL, NULL },
    { "getDaysWithSCTimestamp:", "getDays", "I", 0x401, NULL, NULL },
    { "plusHoursWithSCTimestamp:withInt:", "plusHours", "Luk.co.amlcurran.social.Timestamp;", 0x401, NULL, NULL },
    { "startOfToday", NULL, "Luk.co.amlcurran.social.Timestamp;", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _SCTimeCalculator = { 2, "TimeCalculator", "uk.co.amlcurran.social", NULL, 0x609, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_SCTimeCalculator;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(SCTimeCalculator)
