//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java//uk/co/amlcurran/social/TimeOfDay.java
//

#include "J2ObjC_source.h"
#include "TimeOfDay.h"
#include "java/util/concurrent/TimeUnit.h"

@interface SCTimeOfDay () {
 @public
  jlong millis_;
}

- (instancetype)initWithLong:(jlong)millis;

@end

__attribute__((unused)) static void SCTimeOfDay_initWithLong_(SCTimeOfDay *self, jlong millis);

__attribute__((unused)) static SCTimeOfDay *new_SCTimeOfDay_initWithLong_(jlong millis) NS_RETURNS_RETAINED;

__attribute__((unused)) static SCTimeOfDay *create_SCTimeOfDay_initWithLong_(jlong millis);

@implementation SCTimeOfDay

+ (SCTimeOfDay *)fromHoursWithInt:(jint)hours {
  return SCTimeOfDay_fromHoursWithInt_(hours);
}

- (instancetype)initWithLong:(jlong)millis {
  SCTimeOfDay_initWithLong_(self, millis);
  return self;
}

- (jlong)toMinutes {
  return [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS))) toMinutesWithLong:millis_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromHoursWithInt:", "fromHours", "Luk.co.amlcurran.social.TimeOfDay;", 0x9, NULL, NULL },
    { "initWithLong:", "TimeOfDay", NULL, 0x2, NULL, NULL },
    { "toMinutes", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "millis_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _SCTimeOfDay = { 2, "TimeOfDay", "uk.co.amlcurran.social", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_SCTimeOfDay;
}

@end

SCTimeOfDay *SCTimeOfDay_fromHoursWithInt_(jint hours) {
  SCTimeOfDay_initialize();
  return new_SCTimeOfDay_initWithLong_([((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, HOURS))) toMillisWithLong:hours]);
}

void SCTimeOfDay_initWithLong_(SCTimeOfDay *self, jlong millis) {
  NSObject_init(self);
  self->millis_ = millis;
}

SCTimeOfDay *new_SCTimeOfDay_initWithLong_(jlong millis) {
  SCTimeOfDay *self = [SCTimeOfDay alloc];
  SCTimeOfDay_initWithLong_(self, millis);
  return self;
}

SCTimeOfDay *create_SCTimeOfDay_initWithLong_(jlong millis) {
  return new_SCTimeOfDay_initWithLong_(millis);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SCTimeOfDay)
