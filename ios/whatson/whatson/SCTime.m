//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: core/src/main/java//uk/co/amlcurran/social/Time.java
//

#include "J2ObjC_source.h"
#include "SCTime.h"
#include "TimeCalculator.h"

@interface SCTime () {
 @public
  id<SCTimeCalculator> timeCalculator_;
  jlong millis_;
}

@end

J2OBJC_FIELD_SETTER(SCTime, timeCalculator_, id<SCTimeCalculator>)

@implementation SCTime

- (instancetype)initWithLong:(jlong)millis
        withSCTimeCalculator:(id<SCTimeCalculator>)timeCalculator {
  SCTime_initWithLong_withSCTimeCalculator_(self, millis, timeCalculator);
  return self;
}

- (SCTime *)plusDaysWithInt:(jint)days {
  return [((id<SCTimeCalculator>) nil_chk(timeCalculator_)) plusDaysWithInt:days withSCTime:self];
}

- (jint)daysSinceEpoch {
  return [((id<SCTimeCalculator>) nil_chk(timeCalculator_)) getDaysWithSCTime:self];
}

- (jlong)getMillis {
  return millis_;
}

- (SCTime *)plusHoursWithInt:(jint)hours {
  return [((id<SCTimeCalculator>) nil_chk(timeCalculator_)) plusHoursWithSCTime:self withInt:hours];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withSCTimeCalculator:", "Time", NULL, 0x1, NULL, NULL },
    { "plusDaysWithInt:", "plusDays", "Luk.co.amlcurran.social.Time;", 0x1, NULL, NULL },
    { "daysSinceEpoch", NULL, "I", 0x1, NULL, NULL },
    { "getMillis", NULL, "J", 0x1, NULL, NULL },
    { "plusHoursWithInt:", "plusHours", "Luk.co.amlcurran.social.Time;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "timeCalculator_", NULL, 0x12, "Luk.co.amlcurran.social.TimeCalculator;", NULL, NULL, .constantValue.asLong = 0 },
    { "millis_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _SCTime = { 2, "Time", "uk.co.amlcurran.social", NULL, 0x1, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_SCTime;
}

@end

void SCTime_initWithLong_withSCTimeCalculator_(SCTime *self, jlong millis, id<SCTimeCalculator> timeCalculator) {
  (void) NSObject_init(self);
  self->millis_ = millis;
  self->timeCalculator_ = timeCalculator;
}

SCTime *new_SCTime_initWithLong_withSCTimeCalculator_(jlong millis, id<SCTimeCalculator> timeCalculator) {
  SCTime *self = [SCTime alloc];
  SCTime_initWithLong_withSCTimeCalculator_(self, millis, timeCalculator);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(SCTime)
